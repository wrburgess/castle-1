#!/usr/bin/env ruby
# args = Array.try_convert(ARGV)
# command = args.shift
# bin = './pg-ios/bin'
# options =
# case command
# when "create"
#   puts %x"#{bin}/create ."
# else
#   puts "Documentation"
#end

require 'optparse'

module PGap

  HELP = "Documentation"

  class << self

    def application
      @application ||= PGap::Application.new
    end

  end

  class Application

    COMMANDS = %w(help version create)

    attr_reader :args,
                :command,
                :options

    def run
      parse_command
      parse_options
      parse_arguments

      if self.command && COMMANDS.include?(self.command)
          self.send self.command unless self.command =~ /^-/
      else
        help
      end
    end

    private
      def parse_options
        @options = {}
        OptionParser.new do |opts|
          opts.on("-v", "--version", "Version info") do
            self.options[:version] = true
            @command = 'version'
          end

          opts.on('-h', '--help', 'Display help') do
            self.options[:help] = true
            @command = 'help'
          end
        end.parse!
      end

      def parse_arguments(args = Array.try_convert(ARGV))
        @args = args
        self.args.shift # remove command
      end

      def parse_command(args = ARGV)
        @command = args[0].to_sym if args[0].respond_to? :to_sym
      end

      def help
        puts PGap::HELP
      end

      def version
        version = File.read("VERSION")
        message = "pgap #{version}\n"
        message << "Copyright (c) #{Time.now.year} Dayton Nolan\n"
        puts message
      end
  end

end

PGap.application.run